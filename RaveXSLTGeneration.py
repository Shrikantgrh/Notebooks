just_one_sub="""<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.cdisc.org/ns/odm/v1.3"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 oraxsl"
                xmlns:mdsol="http://www.mdsol.com/ns/odm/metadata" xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON MAY 07 03:50:52 EDT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <ns0:ODM>
      <xsl:if test="/ns0:ODM/@FileType">
        <xsl:attribute name="FileType">
          <xsl:value-of select="/ns0:ODM/@FileType"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@FileOID">
        <xsl:attribute name="FileOID">
          <xsl:value-of select="/ns0:ODM/@FileOID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@CreationDateTime">
        <xsl:attribute name="CreationDateTime">
          <xsl:value-of select="/ns0:ODM/@CreationDateTime"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@ODMVersion">
        <xsl:attribute name="ODMVersion">
          <xsl:value-of select="/ns0:ODM/@ODMVersion"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:for-each select="/ns0:ODM/ns0:ClinicalData[1]">
        <ns0:ClinicalData>
          <xsl:if test="@StudyOID">
            <xsl:attribute name="StudyOID">
              <xsl:value-of select="@StudyOID"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="@MetaDataVersionOID">
            <xsl:attribute name="MetaDataVersionOID">
              <xsl:value-of select="@MetaDataVersionOID"/>
            </xsl:attribute>
          </xsl:if>
          <ns0:SubjectData>
            <xsl:if test="ns0:SubjectData/@SubjectKey">
              <xsl:attribute name="SubjectKey">
                <xsl:value-of select="ns0:SubjectData/@SubjectKey"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:attribute name="TransactionType">Insert</xsl:attribute>
            <ns0:SiteRef>
              <xsl:if test="ns0:SubjectData/ns0:SiteRef/@LocationOID">
                <xsl:attribute name="LocationOID">
                  <xsl:value-of select="ns0:SubjectData/ns0:SiteRef/@LocationOID"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:SubjectData/ns0:SiteRef"/>
            </ns0:SiteRef>
          </ns0:SubjectData>
        </ns0:ClinicalData>
      </xsl:for-each>
    </ns0:ODM>
  </xsl:template>
</xsl:stylesheet>
"""
just_one_clinical="""<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.cdisc.org/ns/odm/v1.3"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 oraxsl"
                xmlns:mdsol="http://www.mdsol.com/ns/odm/metadata" xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON MAY 07 03:50:52 EDT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <ns0:ODM>
      <xsl:if test="/ns0:ODM/@FileType">
        <xsl:attribute name="FileType">
          <xsl:value-of select="/ns0:ODM/@FileType"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@FileOID">
        <xsl:attribute name="FileOID">
          <xsl:value-of select="/ns0:ODM/@FileOID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@CreationDateTime">
        <xsl:attribute name="CreationDateTime">
          <xsl:value-of select="/ns0:ODM/@CreationDateTime"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ODM/@ODMVersion">
        <xsl:attribute name="ODMVersion">
          <xsl:value-of select="/ns0:ODM/@ODMVersion"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:for-each select="/ns0:ODM/ns0:ClinicalData[1]">
        <ns0:ClinicalData>
          <xsl:if test="@StudyOID">
            <xsl:attribute name="StudyOID">
              <xsl:value-of select="@StudyOID"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="@MetaDataVersionOID">
            <xsl:attribute name="MetaDataVersionOID">
              <xsl:value-of select="@MetaDataVersionOID"/>
            </xsl:attribute>
          </xsl:if>
          <ns0:SubjectData>
            <xsl:if test="ns0:SubjectData/@SubjectKey">
              <xsl:attribute name="SubjectKey">
                <xsl:value-of select="ns0:SubjectData/@SubjectKey"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="ns0:SubjectData/@TransactionType">
              <xsl:attribute name="TransactionType">
                <xsl:value-of select="ns0:SubjectData/@TransactionType"/>
              </xsl:attribute>
            </xsl:if>
            <ns0:SiteRef>
              <xsl:if test="ns0:SubjectData/ns0:SiteRef/@LocationOID">
                <xsl:attribute name="LocationOID">
                  <xsl:value-of select="ns0:SubjectData/ns0:SiteRef/@LocationOID"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:SubjectData/ns0:SiteRef"/>
            </ns0:SiteRef>
            <xsl:for-each select="/ns0:ODM/ns0:ClinicalData">
              <ns0:StudyEventData>
                <xsl:if test="ns0:SubjectData/ns0:StudyEventData/@StudyEventOID">
                  <xsl:attribute name="StudyEventOID">
                    <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/@StudyEventOID"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:if test="ns0:SubjectData/ns0:StudyEventData/@StudyEventRepeatKey">
                  <xsl:attribute name="StudyEventRepeatKey">
                    <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/@StudyEventRepeatKey"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:if test="ns0:SubjectData/ns0:StudyEventData/@TransactionType">
                  <xsl:attribute name="TransactionType">
                    <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/@TransactionType"/>
                  </xsl:attribute>
                </xsl:if>
                <ns0:FormData>
                  <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormOID">
                    <xsl:attribute name="FormOID">
                      <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormOID"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormRepeatKey">
                    <xsl:attribute name="FormRepeatKey">
                      <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@TransactionType">
                    <xsl:attribute name="TransactionType">
                      <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@TransactionType"/>
                    </xsl:attribute>
                  </xsl:if>
                  <!-- Handling Multiple ODM Data -->
                  <xsl:choose>
                    <xsl:when test="(ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormOID='SUBJINFO') and (ns0:SubjectData/ns0:StudyEventData/ns0:FormData[@FormOID='SUBJINFO']/ns0:ItemGroupData[2]/@TransactionType='Remove')">
                      <ns0:ItemGroupData>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID">
                          <xsl:attribute name="ItemGroupOID">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey">
                          <xsl:attribute name="ItemGroupRepeatKey">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType">
                          <xsl:attribute name="TransactionType">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:for-each select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData">
                          <ns0:ItemData mdsol:Lock="AsFound">
                            <xsl:if test="@ItemOID">
                              <xsl:attribute name="ItemOID">
                                <xsl:value-of select="@ItemOID"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="@Value"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                            <!--<xsl:if test="@mdsol:Lock">
                              <xsl:attribute name="Lock" namespace="http://www.mdsol.com/ns/odm/metadata">
                                <xsl:value-of select="@mdsol:Lock"/>
                              </xsl:attribute>
                            </xsl:if> -->
                            <xsl:if test="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef">
                              <ns0:MeasurementUnitRef>
                                <xsl:attribute name="MeasurementUnitOID">
                                  <xsl:value-of select="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef/@MeasurementUnitOID"/>
                                </xsl:attribute>
                              </ns0:MeasurementUnitRef>
                            </xsl:if>
                          </ns0:ItemData>
                        </xsl:for-each>
                      </ns0:ItemGroupData>
                      <ns0:ItemGroupData>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID">
                          <xsl:attribute name="ItemGroupOID">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey">
                          <xsl:attribute name="ItemGroupRepeatKey">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData[2]/@TransactionType">
                          <xsl:attribute name="TransactionType">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData[2]/@TransactionType"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:for-each select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData">
                          <ns0:ItemData mdsol:Lock="AsFound">
                            <xsl:if test="@ItemOID">
                              <xsl:attribute name="ItemOID">
                                <xsl:value-of select="@ItemOID"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="@Value"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                            <!-- <xsl:if test="@mdsol:Lock">
                              <xsl:attribute name="Lock" namespace="http://www.mdsol.com/ns/odm/metadata">
                                <xsl:value-of select="@mdsol:Lock"/>
                              </xsl:attribute>
                            </xsl:if>-->
                            <xsl:if test="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef">
                              <ns0:MeasurementUnitRef>
                                <xsl:attribute name="MeasurementUnitOID">
                                  <xsl:value-of select="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef/@MeasurementUnitOID"/>
                                </xsl:attribute>
                              </ns0:MeasurementUnitRef>
                            </xsl:if>
                          </ns0:ItemData>
                        </xsl:for-each>
                      </ns0:ItemGroupData>
                    </xsl:when>
                    <xsl:when test="(ns0:SubjectData/ns0:StudyEventData/ns0:FormData/@FormOID='SUBJINFO') and (not(ns0:SubjectData/ns0:StudyEventData/ns0:FormData[@FormOID='SUBJINFO']/ns0:ItemGroupData[2]/@TransactionType))">
                      <ns0:ItemGroupData>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID">
                          <xsl:attribute name="ItemGroupOID">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey">
                          <xsl:attribute name="ItemGroupRepeatKey">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType">
                          <xsl:attribute name="TransactionType">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:for-each select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData">
                          <ns0:ItemData mdsol:Lock="AsFound">
                            <xsl:if test="@ItemOID">
                              <xsl:attribute name="ItemOID">
                                <xsl:value-of select="@ItemOID"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="@Value"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                            <!--<xsl:if test="@mdsol:Lock">
                              <xsl:attribute name="Lock" namespace="http://www.mdsol.com/ns/odm/metadata">
                                <xsl:value-of select="@mdsol:Lock"/>
                              </xsl:attribute>
                            </xsl:if>-->
                            <xsl:if test="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef">
                              <ns0:MeasurementUnitRef>
                                <xsl:attribute name="MeasurementUnitOID">
                                  <xsl:value-of select="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef/@MeasurementUnitOID"/>
                                </xsl:attribute>
                              </ns0:MeasurementUnitRef>
                            </xsl:if>
                          </ns0:ItemData>
                        </xsl:for-each>
                      </ns0:ItemGroupData>
                    </xsl:when>
                    <xsl:otherwise>
                      <ns0:ItemGroupData>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID">
                          <xsl:attribute name="ItemGroupOID">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupOID"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey">
                          <xsl:attribute name="ItemGroupRepeatKey">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@ItemGroupRepeatKey"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType">
                          <xsl:attribute name="TransactionType">
                            <xsl:value-of select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/@TransactionType"/>
                          </xsl:attribute>
                        </xsl:if>
                        <xsl:for-each select="ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData">
                          <ns0:ItemData mdsol:Lock="AsFound">
                            <xsl:if test="@ItemOID">
                              <xsl:attribute name="ItemOID">
                                <xsl:value-of select="@ItemOID"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="@Value"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                            <!--<xsl:if test="@mdsol:Lock">
                              <xsl:attribute name="mdsol:Lock">
                                <xsl:value-of select="@mdsol:Lock"/>
                              </xsl:attribute>
                            </xsl:if>-->
                            <xsl:if test="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef">
                              <ns0:MeasurementUnitRef>
                                <xsl:attribute name="MeasurementUnitOID">
                                  <xsl:value-of select="//ns0:SubjectData/ns0:StudyEventData/ns0:FormData/ns0:ItemGroupData/ns0:ItemData/ns0:MeasurementUnitRef/@MeasurementUnitOID"/>
                                </xsl:attribute>
                              </ns0:MeasurementUnitRef>
                            </xsl:if>
                          </ns0:ItemData>
                        </xsl:for-each>
                      </ns0:ItemGroupData>
                    </xsl:otherwise>
                  </xsl:choose>
                  <!-- Handling Multiple ODM Data -->
                </ns0:FormData>
              </ns0:StudyEventData>
            </xsl:for-each>
          </ns0:SubjectData>
        </ns0:ClinicalData>
      </xsl:for-each>
    </ns0:ODM>
  </xsl:template>
</xsl:stylesheet>
"""
br_templete ="""<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.cdisc.org/ns/odm/v1.3"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://soa.incresearch.com/Rave/STS"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl"
                xmlns:mdsol="http://www.mdsol.com/ns/odm/metadata" xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns:rl="http://soa.incresearch.com/Rave/URL"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveSTS.xsd"/>
        <oracle-xsl-mapper:rootElement name="Subject" namespace="http://soa.incresearch.com/Rave/STS"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON MAY 07 03:50:52 EDT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:Subject>
      <tns:Details>
        <tns:sourceSubjectKey>
          <xsl:value-of select="/ns0:ODM/ns0:ClinicalData/ns0:SubjectData/@SubjectKey"/>
        </tns:sourceSubjectKey>
        <tns:sourceLocationOID>
          <xsl:value-of select="/ns0:ODM/ns0:ClinicalData/ns0:SubjectData/ns0:SiteRef/@LocationOID"/>
        </tns:sourceLocationOID>
        <tns:targetSubjectKey>
          <xsl:value-of select="/ns0:ODM/ns0:ClinicalData/ns0:SubjectData/@SubjectKey"/>
        </tns:targetSubjectKey>
        <tns:targetLocationOID>
          <xsl:value-of select="/ns0:ODM/ns0:ClinicalData/ns0:SubjectData/ns0:SiteRef/@LocationOID"/>
        </tns:targetLocationOID>
        <tns:transfer>1</tns:transfer>
      </tns:Details>
    </tns:Subject>
  </xsl:template>
</xsl:stylesheet>
"""
xslt_main_templete ="""<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:java="http://www.oracle.com/XSL/Transform/java/java.lang.String"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.cdisc.org/ns/odm/v1.3"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns0="http://soa.incresearch.com/Rave/STS"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:client="http://xmlns.oracle.com/RaveSTSPOC/DemoStudyTFM/DemoStudyBPELProcess"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://soa.incresearch.com/Rave/URL"
                xmlns:mdsol="http://www.mdsol.com/ns/odm/metadata" xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:fn="http://www.w3.org/2005/xpath-functions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveSTS.xsd"/>
        <oracle-xsl-mapper:rootElement name="Subject" namespace="http://soa.incresearch.com/Rave/STS"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED Jun 03 01:28:27 EDT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:ODM FileType="Transactional" FileOID="{/ns0:Subject/tns:ODM/@FileOID}"
             CreationDateTime="{/ns0:Subject/tns:ODM/@CreationDateTime}"
             ODMVersion="{/ns0:Subject/tns:ODM/@ODMVersion}">
      <xsl:for-each select="/ns0:Subject/tns:ODM/tns:ClinicalData">
        <xsl:if test='STUDY_AND_FORM_CONDITION'>
          <!-- above added all forms and folders conditions as per spec to this condition so that this doesn't create unnecessary clinical data -->
          <tns:ClinicalData MetaDataVersionOID="{@MetaDataVersionOID}"
                            StudyOID="{/ns0:Subject/ns1:RaveUrls/ns1:RaveUrl[@utype='TARGET']/ns1:studyName}">
            <tns:SubjectData TransactionType="Update">
              <xsl:attribute name="SubjectKey">
                <xsl:value-of select="tns:SubjectData/@SubjectKey"/>
              </xsl:attribute>
              <tns:SiteRef LocationOID="{/ns0:Subject/ns0:Details/ns0:targetLocationOID}"/>
              STUDYEVENTTEMPLETE
            </tns:SubjectData>
          </tns:ClinicalData>
          </xsl:if>
      </xsl:for-each>
    </tns:ODM>
  </xsl:template>
</xsl:stylesheet>
"""
study_event_templete ="""<xsl:if test="((tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'SOURCE_STUDYEVENTOID')and 
              (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='SOURCE_FORMOID'))">
                <tns:StudyEventData StudyEventOID="TARGET_STUDYEVENTOID">
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@TransactionType">
                    <xsl:attribute name="TransactionType">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@TransactionType"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="not(tns:SubjectData/tns:StudyEventData/@TransactionType)">
                    <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  </xsl:if>
                  <tns:FormData>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID">
                      <xsl:attribute name="FormOID">TARGET_FORMOID</xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType">
                      <xsl:attribute name="TransactionType">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType)">
                      <xsl:attribute name="TransactionType">Update</xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID">
                        <xsl:attribute name="ItemGroupOID">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType">
                        <xsl:attribute name="TransactionType">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType)">
                        <xsl:attribute name="TransactionType">Update</xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:choose>
                          <xsl:when test="ITEM_OID_CONDITION">
                             <tns:ItemData mdsol:Lock="AsFound">
                              <xsl:if test="@ItemOID">
                                <xsl:attribute name="ItemOID">
                                  <xsl:value-of select="@ItemOID"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="@Value"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@TransactionType">
                                <xsl:attribute name="TransactionType">
                                  <xsl:value-of select="@TransactionType"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:value-of select="."/>
                            </tns:ItemData>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>"""
import numpy as np
import pandas as pd
spec = pd.read_excel("/Users/shrek/templete_ex.xlsx", names=['src_folder','src_rep_fol','src_form','Rep_frm_src','rep_rec_src','src_field','src_format','selection_condition','src_comment','arr','trg_folder','trg_rep_fol','trg_form','trg_rep_form','trg_field','trg_rep_log','trg_format','transformation'])

spec_dict={}
spec.head(2)
fol_form ={'source_folder':None, 'source_form':None, 'target_folder':None, 'target_form':None}
study_form_con = None
folder_form =[]
folder_form_chk=None
study_event_templete_final =''
for ind in spec.index:
    study_event_cond =None
    itemOIDStr=None
   
    if  str(spec['src_folder'][ind]) !='nan':
                  
        fol_form['source_folder']=spec['src_folder'][ind]
        fol_form['source_form']=spec['src_form'][ind]
        fol_form['target_folder']=spec['trg_folder'][ind]
        fol_form['target_form']=spec['trg_form'][ind]
        folder_form_chk =spec['src_folder'][ind]+"_"+spec['src_form'][ind]
        
        if folder_form_chk not in  folder_form:
            chk =spec[(spec['src_folder'] == spec['src_folder'][ind]) & (spec['src_form'] == spec['src_form'][ind])]
            for ind1 in chk.index:
                if itemOIDStr:
                    itemOIDStr = itemOIDStr+ ' or '+" (@ItemOID='"+spec['src_form'][ind1]+"."+spec['src_field'][ind1]+"')"
                else:
                    itemOIDStr ="( @ItemOID='"+spec['src_form'][ind1]+"."+spec['src_field'][ind1]+"')"
                    
            study_event_templete_final = study_event_templete_final+"\n"+((((study_event_templete.replace("SOURCE_STUDYEVENTOID",spec['src_folder'][ind])).replace("TARGET_STUDYEVENTOID",spec['trg_folder'][ind])).replace("SOURCE_FORMOID",spec['src_form'][ind])).replace("TARGET_FORMOID",spec['trg_form'][ind])).replace('ITEM_OID_CONDITION',itemOIDStr)
            #print("===========")
            #print(folder_form)
            #print(study_event_templete_final)
            if study_form_con:
                study_form_con =study_form_con+" or "+"""tns:SubjectData/tns:StudyEventData/@StudyEventOID = \""""+spec['src_folder'][ind]+"""" and tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID =\""""+spec['src_form'][ind]+"""\""""
               
                
            else:
                study_form_con = """tns:SubjectData/tns:StudyEventData/@StudyEventOID = \""""+spec['src_folder'][ind]+"""" and tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID =\""""+spec['src_form'][ind]+"""\""""
            
        folder_form.append(folder_form_chk)
        folder_form =list(dict.fromkeys(folder_form))
        
        
        
    
print(study_form_con) 
#print(study_event_templete_final)  
#print(study_event_templete)
study_name =input("Enter Name: ")
study_name = str(study_name)
xslt_main_templete = xslt_main_templete.replace('STUDY_AND_FORM_CONDITION',study_form_con)
xslt_main_templete =xslt_main_templete.replace('STUDYEVENTTEMPLETE',study_event_templete_final)
f_main = open("/Users/shrek/Documents/RaveSDT/OSB/ResourceRepository/RaveSTS/XSLT/"+study_name+"_Main_Transformation.xsl",'w')
f_main.write(xslt_main_templete)
f_main.close()
f_BR =open("/Users/shrek/Documents/RaveSDT/OSB/ResourceRepository/RaveSTS/XSLT/"+study_name+"BRTransformation.xsl",'w')
f_BR.write(br_templete)
f_BR.close() 
f_JustOne=open("/Users/shrek/Documents/RaveSDT/OSB/ResourceRepository/RaveSTS/XSLT/"+study_name+"_JustOneClinical_Transformation.xsl",'w')
f_JustOne.write(just_one_clinical)
f_JustOne.close() 
f_JustOneSub=open("/Users/shrek/Documents/RaveSDT/OSB/ResourceRepository/RaveSTS/XSLT/"+study_name+"_JustSubject_Transformation.xsl",'w')
f_JustOneSub.write(just_one_sub)
f_JustOneSub.close()  

  